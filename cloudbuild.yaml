# This is a sample build configuration for JavaScript.
# Check our guides at https://cloud.google.com/cloud-build/docs/deploying-builds/
# Only use spaces to indent your .yaml configuration.
# -----
# You can specify a custom docker steps or other builder steps, look in docs
steps:

  # Pull Repo Code
  - name: 'gcr.io/cloud-builders/git'
    id: 'cloning-git-repo'
    args: ['clone', 'https://github.com/Danail-Irinkov/$_DEPLOYMENT', '--config', 'core.autocrlf=input']

  # Build the vsf containers
  - name: 'gcr.io/cloud-builders/docker'
    id: 'docker-build-vsf-api'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_DEPLOYMENT', '-f', 'docker/$_DEPLOYMENT/Dockerfile', '.']

  # Push the vsf containers to gcr.io repo
  - name: 'gcr.io/cloud-builders/docker'
    id: 'docker-push-vsf-api'
    args: ['push', 'gcr.io/$PROJECT_ID/$_DEPLOYMENT']

  # Deploy to GKE
  - name: 'gcr.io/cloud-builders/gke-deploy'
    id: 'deploy-kube-config'
    args:
      - 'apply'
      - '-f'
      - 'kube'
      - '--location=${_K8S_ZONE}'
      - '--cluster=${_K8S_CLUSTER}'
    timeout: '120s'

  # patch kubernetes deployment to trigger rolling update
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'trigger-rolling-update'
    args: [ 'patch', 'deployment', '${_DEPLOYMENT}', '-n', '${_NAMESPACE}', '-p',
            '{"spec": {"template": {"metadata": {"annotations": {"build":"$BUILD_ID"}}}}}' ]
    env:
      # required K8s cluster env variables
      - 'CLOUDSDK_COMPUTE_ZONE=${_K8S_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_K8S_CLUSTER}'

# arguments
substitutions:
  _K8S_ZONE:      europe-west3-c   # K8s zone
  _K8S_CLUSTER:   procc-kub2    # K8s cluster name
  _NAMESPACE:     default         # K8s namespace
  _DEPLOYMENT:    vue-storefront-api # K8s deployment name
  _WEBHOOK_URL:   slack_notification_webhook  # slack notifications
  _OAUTH_TOKEN:   composer_github_oauth_token # access to private code repos


images: ['gcr.io/$PROJECT_ID/$_DEPLOYMENT']

#options:
#  machineType: 'N1_HIGHCPU_8'
